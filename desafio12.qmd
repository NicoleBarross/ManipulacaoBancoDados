---
title: "Desafio 12"
author: "Nicole de Barros Silva"
format: 
  html:
    self-contained: true
editor: visual
---

## Slide 10: SQLite e Polars

```{python}
import polars as pl
import sqlite3
```

```{python}
# Iniciando a conexão com o banco
conn = sqlite3.connect('data.db')
cursor = conn.cursor()
```

```{python}
#Exclui a tabela caso exista, para garantir que ao rodar este chunck novamente os resultados não sejam alterados
cursor.execute('DROP TABLE IF EXISTS vendas')
```

```{python}
# Criação manual de uma tabela
cursor.execute('''
CREATE TABLE vendas (
    id INTEGER PRIMARY KEY,
    vendedor TEXT,
    produto TEXT,
    valor REAL,
    data_venda DATE
)
''')
```


```{python}
# Inserção de dados em uma tabela 
cursor.execute('''
INSERT INTO vendas (vendedor, produto, valor, data_venda)
VALUES
    ('Ana', 'Produto A', 120.5, '2024-09-01'),
    ('Carlos', 'Produto B', 200.0, '2024-10-02'),
    ('Ana', 'Produto C', 150.0, '2024-09-03'),
    ('Bruno', 'Produto A', 300.0, '2024-11-04'),
    ('Carlos', 'Produto C', 100.0, '2024-10-05');
''')
conn.commit()
```

```{python}
# Consulta simples no SQLite
cursor.execute("SELECT * FROM vendas")
rows = cursor.fetchall()
for row in rows:
  print(row)
```

```{python}
# Integração com Polars
dados = pl.read_database("SELECT * FROM vendas", conn)
print(dados)
```

```{python}
# Qual é o total de vendas por vendedor?
vendas_total = pl.read_database('''
   SELECT vendedor, SUM(valor) as total_vendas
   FROM vendas
   GROUP BY vendedor;
''', conn)
print(vendas_total)
```

```{python}
#Qual é o valor médio de venda por vendedor?
vendas_medias = pl.read_database('''
   SELECT vendedor, AVG(valor) as total_vendas
   FROM vendas
   GROUP BY vendedor;
''', conn)
print(vendas_medias)
```

```{python}
# Criando uma tabela contendo o nome do vendedor, o número de vendas realizadas, o total vendido e o valor médio por venda
vendas_comb = pl.read_database("""
SELECT vendedor, 
       COUNT(*) as numero_vendas,
       SUM(valor) as total_vendas, 
       AVG(valor) as media_vendas
FROM vendas
GROUP BY vendedor;
""", conn)
print(vendas_comb)
```

```{python}
# Quais foram as vendas de, pelo menos, $200.00?
ticket_alto = pl.read_database("""
SELECT * FROM vendas WHERE valor >= 200
""", conn)
print(ticket_alto)
```

```{python}
# Qual foi o volume mensal de vendas?
vendas_mensais = pl.read_database("""
SELECT strftime('%Y-%m', data_venda) AS mes, SUM(valor) AS total_vendas
FROM vendas GROUP BY mes ORDER BY mes
""", conn)
print(vendas_mensais)
```
```{python}
#Exclui a tabela caso exista, para garantir que ao rodar este chunck novamente os resultados não sejam alterados
cursor.execute('DROP TABLE IF EXISTS produtos')
```

```{python}
# Criando a tabela de produtos
cursor.execute('''
CREATE TABLE IF NOT EXISTS produtos (
    id INTEGER PRIMARY KEY,
    nome TEXT NOT NULL,
    categoria TEXT NOT NULL,
    preco REAL NOT NULL,
    estoque INTEGER NOT NULL
);
''')
cursor.execute('''
INSERT INTO produtos (nome, categoria, preco, estoque) VALUES
    ('Produto A', 'Categoria 1', 100.0, 50),
    ('Produto B', 'Categoria 2', 150.0, 30),
    ('Produto C', 'Categoria 1', 200.0, 20),
    ('Produto D', 'Categoria 2', 250.0, 10),
    ('Produto E', 'Categoria 3', 300.0, 0);
''')
conn.commit()
```

```{python}
# Consultando a tabela de produtos
prods = pl.read_database("SELECT * FROM produtos", conn)
print(prods)
```

```{python}
# JOINs de vendas e produtos
lucros = pl.read_database("""
SELECT produto, valor AS compra, preco AS venda, preco-valor AS lucro
FROM vendas
INNER JOIN produtos ON vendas.produto = produtos.nome
""", conn)
print(lucros)
```

```{python}
# Qual foi o lucro médio por vendedor?
lucro_medio = pl.read_database("""
SELECT vendedor, produto, AVG(preco-valor) AS lucro_medio
FROM vendas
INNER JOIN produtos ON vendas.produto = produtos.nome
GROUP BY vendedor
""", conn)
print(lucro_medio)
```

```{r}
# Registra quando o html foi gerado
cat(paste0("Este HTML foi gerado em: ", Sys.time()))
```